Nicholas Perrotti Ivy Wong David Bang
git@github.com:nperrotti/gw45-Daivyrotti.git
APCS pd 8
HW34 -- GridWorld, Part 4
2014-04-29


Did You Know 7:
  1. act, getActors, processActors, getMoveLocations, selectMoveLocation, makeMove
  2. getActors, processActors, getMoveLocations, selectMoveLocation, makeMov
  3. yes, if the new subclass takes actors from different positions than Critter doees
  4. a)tell them to move forward one space b)change their color c)remove them all
  5. a)getMoveLocations - returns the places the critter can move
     b)selectMoveLocation - selects one of the locations from getMoveLocations 
     c)makeMove - moves the Critter to the location selected in selectMoveLocation
  6. Critter has no constructor because it is a subclass of Actor, which already has a default constructor


Did You Know 8:
  1. In ChameleonCritter, processActors() is overridden and different from that of Critter. This makes the ChameleonCritter process the actors differently from a Critter.
  2. The makeMove method calls super.makeMove because the ChameleonCritter behaves the same way as a Critter after it changes its direction when moving to a new location.
  3. You would make ChameleonCritter drop flowers in its old location when it moves by adding statements in makeMove() that keep track of the critter's old location and create a flower in that old location after the critter has moved.
  4. ChameleonCritter doesn't override the getActors() method because it accesses the same actors that a Critter does, so there is no need to modify the method.
  5. The Actor class contains the getLocation() method, and ChameleonCritter inherits this.
  6. A Critter can access its own grid by calling getGrid().


Did You Know 9:
  1. CrabCritter processes its actors the same as superclass Critter does.It is only the individual steps of processActors, each of which are implemented 
     in separate methods which will changed accordingly. The processActors method does not change in itself, it is only the used methods that have its code overwritten.
  2. CrabCritter only eats actors in front of it and to the front-left and front-right of it.
  3. The CrabCritter can only eat the actors directly to the front-left, front-right, or up directions, so the method takes the list of adjacent actors and returns the locations with possibly edible actors. 
  4. The locations are (4,3),(4,4),(4,5)
  5. Sim: Both of these Critters randomly chose their next location based on possible locations avaliable.
     Diff: CrabCritter can only move left and right as it is a crab, Critter can move to any adjacent location to itself.
  6. CrabCritter determines if it can move left or right. If not it should turn 90 degrees randomly to the right or left. If the CrabCritter determines the set of avaliable locations it can move to and
     and there is not avaliable location to move to, CrabCritter sets the loc parameter to its own location value and turns when the makeMove method is called.
  7. CrabCritter specifically can using the processActors method only removes non-rocks and non-Critters, and since CrabCritters are Critters, they are not removed




A new type of Critter has appeared on the scene:
GhostCritter Specs:
This subclass of Critter can scare away other actors (except Rocks, Flowers, and other GhostCritters) when it comes near them. If you are a neighbor of the GhostCritter, you change direction away from the GhostCritter and move forward two spaces. If they run off the edge of the grid, they remove themselves from the grid and may leave another GhostCritter behind. After processing the nearby actors, the GhostCritter moves the same way a Critter does.
GhostCritter Test Cases:
1. Surround the GhostCritter with neighbors in the center of the grid. They should turn around and flee two spaces. The GhostCritter should then move.
2. Surround the GhostCritter with neighbors in a corner or edge of the grid. They should turn around and try to flee. If they are next to the edge of the grid, they should "die" and have a chance of leaving a GhostCritter behind. The GC should then move.
3. Leave the GhostCritter in the center of the grid. It should move around normally.
